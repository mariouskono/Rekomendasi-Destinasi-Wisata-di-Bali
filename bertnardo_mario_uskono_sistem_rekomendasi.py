# -*- coding: utf-8 -*-
"""Bertnardo Mario Uskono - Sistem Rekomendasi.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17vJPkZdpDQf3nOS0P5dYolVhqlJcgw8w

### Sistem Rekomendasi Tempat Wisata Bali - Bertnardo Mario Uskono

Dataset: [Bali Tourist Attractions Dataset from Google Maps](https://www.kaggle.com/datasets/bertnardomariouskono/bali-tourist-attractions-dataset-from-google-maps)

**1. Import Library**
"""

import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import linear_kernel
import matplotlib.pyplot as plt
import seaborn as sns

"""Dokumentasi:

Pada tahap ini, kita mengimpor pustaka penting untuk pemrosesan data dan sistem rekomendasi.
* pandas: untuk manipulasi data berbentuk tabel.
* TfidfVectorizer: mengubah teks menjadi representasi numerik berbobot berdasarkan frekuensi kata.
* linear_kernel: untuk menghitung kesamaan cosine antar vektor TF-IDF.
* matplotlib & seaborn: untuk visualisasi data.

Mengimpor pustaka ini adalah langkah dasar agar kita bisa memuat, mengolah, dan memvisualisasikan data.

---

**2. Load Dataset**
"""

df = pd.read_csv('/content/dataset_tempat_wisata_bali_cleaned.csv')
print(f"Jumlah data: {len(df)}")
df.head()

"""Dokumentasi:
* Dataset berisi 772 baris data tempat wisata Bali.  
* Fungsi df.head() menampilkan 5 baris pertama untuk memberikan gambaran tentang struktur dan isi data.
* Kolom utama meliputi nama tempat wisata, kategori, kabupaten/kota, rating, preferensi, dan informasi lokasi.
* Output akan berupa tabel ringkas yang memperlihatkan data awal.

---

**3. Data Understanding: Distribusi Kategori**
"""

plt.figure(figsize=(8,5))
sns.countplot(data=df, x='kategori', order=df['kategori'].value_counts().index)
plt.title('Distribusi Kategori Tempat Wisata di Bali')
plt.xlabel('Kategori')
plt.ylabel('Jumlah Tempat Wisata')
plt.show()

"""Dokumentasi:
* Visualisasi ini menunjukkan jumlah tempat wisata untuk tiap kategori (Alam, Budaya, Rekreasi, Umum).
* Output berupa grafik batang yang memudahkan melihat kategori mana yang paling banyak dan paling sedikit.
* Informasi ini berguna untuk memahami proporsi data sebelum membuat model.

---

**4. Data Preparation**
"""

df['features'] = df['kategori'] + ' ' + df['preferensi']

"""Dokumentasi:

* Membuat kolom baru **features** dengan menggabungkan kolom **kategori** dan **preferensi**.
* Ini bertujuan menyediakan fitur teks yang representatif untuk sistem rekomendasi content-based filtering.
* Output tidak menghasilkan tampilan, tapi data dataframe sekarang memiliki kolom baru yang berisi gabungan teks.

---

**5. TF-IDF Vectorization**
"""

tfidf = TfidfVectorizer()
tfidf_matrix = tfidf.fit_transform(df['features'])
print(f"Dimensi matriks TF-IDF: {tfidf_matrix.shape}")

"""Dokumentasi:

* Mengubah kolom 'features' menjadi matriks TF-IDF, yang merepresentasikan setiap kata sebagai bobot penting.
* Matriks berdimensi (jumlah data x jumlah fitur unik).  
* Output berupa bentuk matriks, misal (772, 5) artinya 772 tempat wisata dengan 5 fitur kata unik.
* Matriks ini digunakan untuk mengukur kemiripan antar tempat wisata.

---

**6. Cosine Similarity**
"""

cosine_sim = linear_kernel(tfidf_matrix, tfidf_matrix)

"""Dokumentasi:

* Menghitung skor cosine similarity antar setiap pasangan tempat wisata.
* Nilai similarity berkisar antara 0 sampai 1; semakin tinggi berarti semakin mirip.
* Output adalah matriks persegi 772x772 yang berisi skor kemiripan antar tempat.

**Visualisasi Heatmap Cosine Similarity (subset kecil)**
"""

plt.figure(figsize=(16,12))
sns.heatmap(cosine_sim[:20, :20], cmap='coolwarm', annot=True, fmt=".2f")
plt.title('Cosine Similarity Heatmap (20x20 sample)')
plt.show()

"""**7. Mapping nama tempat ke indeks**"""

indices = pd.Series(df.index, index=df['nama']).drop_duplicates()

"""Dokumentasi:

* Membuat dictionary yang memetakan nama tempat wisata ke indeks dataframe.
* Mempermudah pencarian data saat melakukan rekomendasi berdasarkan nama.
* Output adalah objek pandas Series yang menghubungkan nama dengan indeks.

---

**8. Fungsi Rekomendasi**
"""

def recommend_places(place_name, cosine_sim=cosine_sim):
    """
    Fungsi untuk merekomendasikan 10 tempat wisata yang mirip berdasarkan nama tempat.
    """
    if place_name not in indices:
        return f"Tempat '{place_name}' tidak ditemukan."

    idx = indices[place_name]
    sim_scores = list(enumerate(cosine_sim[idx].flatten()))
    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)
    sim_scores = sim_scores[1:11]
    place_indices = [i[0] for i in sim_scores]
    return df[['nama', 'kategori', 'rating']].iloc[place_indices]

"""Dokumentasi:

Fungsi ini menerima nama tempat wisata dan mengembalikan 10 tempat wisata lain yang paling mirip.\
Prosesnya:  
* Cari indeks tempat wisata dalam data  
* Ambil skor kemiripan dari matriks cosine similarity  
* Urutkan berdasarkan skor tertinggi (kecuali tempat yang dicari sendiri)  
* Ambil 10 teratas  

Output berupa dataframe dengan kolom nama, kategori, dan rating tempat wisata yang direkomendasikan.

**9. Contoh Penggunaan**
"""

place = 'Taman Mumbul Sangeh'
print(f"Rekomendasi tempat wisata mirip dengan '{place}':")
recommendations = recommend_places(place)
print(recommendations)

"""**Visualisasi Rating Tempat yang Direkomendasikan**"""

plt.figure(figsize=(10,5))
sns.barplot(x='rating', y='nama', data=recommendations, palette='viridis')
plt.title(f'Rating 10 Tempat Wisata Direkomendasikan Mirip "{place}"')
plt.xlabel('Rating')
plt.ylabel('Nama Tempat')
plt.show()

"""Dokumentasi:
* Menjalankan fungsi rekomendasi untuk tempat wisata 'Taman Mumbul Sangeh'.
* Output adalah tabel yang berisi 10 rekomendasi tempat wisata teratas yang mirip dengan input.
* Tabel menampilkan nama, kategori, dan rating sebagai informasi pendukung bagi pengguna.

---

**10. Evaluasi Sederhana**
"""

print("Rating rata-rata dari tempat yang direkomendasikan:")
print(recommendations['rating'].mean())

"""Dokumentasi:
* Menghitung rata-rata rating tempat-tempat wisata yang direkomendasikan.
* Ini sebagai evaluasi awal untuk memastikan tempat yang direkomendasikan memiliki rating baik.
* Output berupa angka desimal yang merepresentasikan rata-rata rating.

---
"""